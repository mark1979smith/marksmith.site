# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
parameters:
    signin.google.admin_auth_method: 'domain'
    signin.google.admin_auth_value: 'marksmith.email'
    signin.google.client_secret: 'client_secret.json'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: true
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false
    markdown.engine:
        class: Aptoma\Twig\Extension\MarkdownEngine\MichelfMarkdownEngine
    twig.markdown:
        class: Aptoma\Twig\Extension\MarkdownExtension
        arguments: ['@markdown.engine']
        tags:
            - { name: twig.extension }

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    Admin\:
        resource: '../../src/Admin/*'
        public: true
        arguments: ['@service_container', '@request_stack', '@logger']

        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/Admin/{Entity,Repository,Tests}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    app.api.redis:
        class: AppBundle\Utils\Api\Redis
        public: true
    app.api.mysql:
        class: AppBundle\Utils\Api\Mysql
        public: true



    # add more services, or override services that need manual wiring
    # AppBundle\Service\ExampleService:
    #     arguments:
    #         $someArgument: 'some_value'
